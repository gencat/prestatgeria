<?php
/**
 * Zikula Application Framework
 *
 * @copyright (c) 2004, Zikula Development Team
 * @link http://www.zikula.org/
 * @version $Id: pageslist.php 411 2010-04-23 16:02:49Z yokav $
 * @license GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @author Andrea Moro
 * @author Mark West
 * @package Zikula_Value_Addons
 * @subpackage Pages
 */

/**
 * initialise block
 * 
 * @author       Mark West
 * @version      $Revision: 411 $
 */
function Pages_pageslistblock_init()
{
    // Security
    SecurityUtil::registerPermissionSchema('Pages:pageslistblock:', 'Block title::');
}

/**
 * get information on block
 * 
 * @author       Mark West
 * @version      $Revision: 411 $
 * @return       array       The block information
 */
function Pages_pageslistblock_info()
{
    $dom = ZLanguage::getModuleDomain('Pages');

    return array('module'          => 'Pages',
                 'text_type'       => __('Pages list', $dom),
                 'text_type_long'  => __('Display a list of pages', $dom),
                 'allow_multiple'  => true,
                 'form_content'    => false,
                 'form_refresh'    => false,
                 'show_preview'    => true,
                 'admin_tableless' => true);
}

/**
 * display block
 * 
 * @author       Mark West
 * @version      $Revision: 411 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the rendered bock
 */
function Pages_pageslistblock_display($blockinfo)
{
    // Security check
    if (!SecurityUtil::checkPermission('Pages:pageslistblock:', "$blockinfo[title]::", ACCESS_READ)) {
        return false;
    }

    // Get variables from content block
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 5;
    }

    // Check if the htmlpages module is available. 
    if (!pnModAvailable('Pages')) {
        return false;
    }

    // Call the modules API to get the items
    $items = pnModAPIFunc('Pages', 'user', 'getall');    

    // Check for no items returned
    if (empty($items)) {
        return;
    }

    // Call the modules API to get the numitems
    $countitems = pnModAPIFunc('Pages', 'user', 'countitems');    

    // Compare the numitems with the block setting
    if ($countitems <= $vars['numitems']) {
        $vars['numitems'] = $countitems;
    }    

    // Create output object
    $render = & pnRender::getInstance('Pages');
    $render->cache_id = $blockinfo['bid'];

    // Display each item, permissions permitting
    $shown_results = 0;
    $pagesitems = array();
    foreach ($items as $item) {
        if (SecurityUtil::checkPermission('Pages::', "{$item['title']}::{$item['pageid']}", ACCESS_OVERVIEW)) {
            $shown_results++;
            if ($shown_results <= $vars['numitems']) {
                if (SecurityUtil::checkPermission('Pages::', "{$item['title']}::{$item['pageid']}", ACCESS_READ)) {
                    $pagesitems[] = array('url'   => pnModURL('Pages', 'user', 'display', array('pageid' => $item['pageid'])),
                                          'title' => $item['title']);
                } else {
                    $pagesitems[] = array('title' => $item['title']);
                }
            }
        }
    }
    $render->assign('items', $pagesitems);

    // Populate block info and pass to theme
    $blockinfo['content'] = $render->fetch('pages_block_pageslist.htm');

    return pnBlockThemeBlock($blockinfo);
}

/**
 * modify block settings
 * 
 * @author       Mark West
 * @version      $Revision: 411 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       output      the bock form
 */
function Pages_pageslistblock_modify($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // Defaults
    if (empty($vars['numitems'])) {
        $vars['numitems'] = 5;
    }

    // Create output object
    $render = & pnRender::getInstance('Pages', false);

    // assign the approriate values
    $render->assign($vars);

    // Return the output that has been generated by this function
    return $render->fetch('pages_block_pageslist_modify.htm');
}

/**
 * update block settings
 * 
 * @author       Mark West
 * @version      $Revision: 411 $
 * @param        array       $blockinfo     a blockinfo structure
 * @return       $blockinfo  the modified blockinfo structure
 */
function Pages_pageslistblock_update($blockinfo)
{
    // Get current content
    $vars = pnBlockVarsFromContent($blockinfo['content']);

    // alter the corresponding variable
    $vars['numitems'] = (int)FormUtil::getPassedValue('numitems', null, 'POST');

    // write back the new contents
    $blockinfo['content'] = pnBlockVarsToContent($vars);

    // clear the block cache
    $render = & pnRender::getInstance('Pages');
    $render->clear_cache('pages_block_pageslist.htm');

    return $blockinfo;
}
